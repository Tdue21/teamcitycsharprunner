//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSharpCompiler {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CSharpCompiler.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Reflection;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public abstract class AbstractObjectVisitor : IObjectVisitor
        ///    {
        ///        private int currentNesting;
        ///    	private readonly Stack&lt;object &gt; objectsStack = new Stack&lt;object&gt;();
        ///    	private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public;
        ///
        ///    	private IDisposable Nest
        ///        {
        ///            get { return new [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AbstractObjectVisitor {
            get {
                return ResourceManager.GetString("AbstractObjectVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.IO;
        ///using CSharpCompiler.Runtime.Messages;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public class ArtifactObjectDumper : IObjectDumper
        ///    {
        ///        private readonly IFileOutputObjectVisitorFactory factory;
        ///        private readonly IServiceMessages serviceMessages;
        ///	    private readonly string artifactsPath;
        ///	    private int currentSequence;
        ///
        ///        public static readonly IObjectDumper Default;
        ///
        ///        static ArtifactObjectDumper()
        ///        {
        ///            Default = new Art [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ArtifactObjectDumper {
            get {
                return ResourceManager.GetString("ArtifactObjectDumper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal class BuildFailureMessage : BuildStatusMessage
        ///    {
        ///        public BuildFailureMessage(object value, string format) : base(&quot;FAILURE&quot;, value, format)
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildFailureMessage {
            get {
                return ResourceManager.GetString("BuildFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogErrorMessage : BuildLogMessageBase
        ///    {
        ///        public BuildLogErrorMessage(object message) : base(message, &quot;ERROR&quot;)
        ///        {
        ///            
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildLogErrorMessage {
            get {
                return ResourceManager.GetString("BuildLogErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogErrorMessageWithDetails : BuildLogErrorMessage
        ///    {
        ///        private readonly object errorDetails;
        ///
        ///        public BuildLogErrorMessageWithDetails(object message, object errorDetails) : base(message)
        ///        {
        ///            this.errorDetails = errorDetails;
        ///        }
        ///
        ///        protected override IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt; Properties
        ///        {
        ///            get        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BuildLogErrorMessageWithDetails {
            get {
                return ResourceManager.GetString("BuildLogErrorMessageWithDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogFailureMessage : BuildLogMessageBase
        ///    {
        ///        public BuildLogFailureMessage(object message) : base(message, &quot;FAILURE&quot;)
        ///        {
        ///            
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildLogFailureMessage {
            get {
                return ResourceManager.GetString("BuildLogFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogMessageBase : TeamCityServiceMessageWithAttributes
        ///    {
        ///        private readonly object message;
        ///        private readonly string status;
        ///
        ///        protected BuildLogMessageBase(object message, string status) : base(&quot;message&quot;)
        ///        {
        ///            this.message = message;
        ///            this.status = status;
        ///        }
        ///
        ///        protected override IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt; Propert [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BuildLogMessageBase {
            get {
                return ResourceManager.GetString("BuildLogMessageBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogNormalMessage : BuildLogMessageBase
        ///    {
        ///        public BuildLogNormalMessage(object message) : base(message, &quot;NORMAL&quot;)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildLogNormalMessage {
            get {
                return ResourceManager.GetString("BuildLogNormalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildLogWarningMessage : BuildLogMessageBase
        ///    {
        ///        public BuildLogWarningMessage(object message) : base(message, &quot;WARNING&quot;)
        ///        {
        ///            
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildLogWarningMessage {
            get {
                return ResourceManager.GetString("BuildLogWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal class BuildNumberMessage : TeamCityServiceMessageSimple
        ///    {
        ///        public BuildNumberMessage(object buildNumber) : base(&quot;buildNumber&quot;, buildNumber)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildNumberMessage {
            get {
                return ResourceManager.GetString("BuildNumberMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildStatisticMessage : TeamCityServiceMessageWithAttributes
        ///    {
        ///        private readonly object key;
        ///        private readonly int value;
        ///
        ///        public static readonly ICollection&lt;string&gt; PredefinedStatisticsKeys = new HashSet&lt;string&gt;(StringComparer.InvariantCultureIgnoreCase)
        ///                                                                           {
        ///                                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BuildStatisticMessage {
            get {
                return ResourceManager.GetString("BuildStatisticMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class BuildStatusMessage : TeamCityServiceMessageWithAttributes
        ///    {
        ///        private readonly string status;
        ///        private readonly object value;
        ///        private readonly string format;
        ///
        ///        protected BuildStatusMessage(string status, object value, string format) : base(&quot;buildStatus&quot;)
        ///        {
        ///            this.status = status;
        ///            this.value = value;
        ///            this.format = format;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BuildStatusMessage {
            get {
                return ResourceManager.GetString("BuildStatusMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal class BuildSuccessMessage : BuildStatusMessage
        ///    {
        ///        public BuildSuccessMessage(object value, string format) : base(&quot;SUCCESS&quot;, value, format)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string BuildSuccessMessage {
            get {
                return ResourceManager.GetString("BuildSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Reflection;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public abstract class DefaultObjectVisitor : AbstractObjectVisitor
        ///    {
        ///        protected DefaultObjectVisitor(int maximumDepth) : base(maximumDepth)
        ///        {
        ///        }
        ///
        ///    	protected override void VisitCyclicReferenceFound()
        ///    	{
        ///    	}
        ///
        ///    	protected override void VisitNull()
        ///        {
        ///        }
        ///
        ///    	protected override void VisitCyclicReferenceTypeHeader(Type type)
        ///    	{
        ///    	}
        ///
        ///    	prote [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultObjectVisitor {
            get {
                return ResourceManager.GetString("DefaultObjectVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace CSharpCompiler.Runtime
        ///{
        ///    public class DisposableAction : IDisposable
        ///    {
        ///        private readonly Action onDispose;
        ///
        ///        public DisposableAction(Action onInitialize, Action onDispose)
        ///        {
        ///            this.onDispose = onDispose;
        ///            onInitialize();
        ///        }
        ///
        ///        public void Dispose()
        ///        {
        ///            onDispose();
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string DisposableAction {
            get {
                return ResourceManager.GetString("DisposableAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public static class DumpExtensions
        ///    {
        ///        private static readonly IObjectDumper Dumper;
        ///
        ///        static DumpExtensions()
        ///        {
        ///            Dumper = ArtifactObjectDumper.Default;
        ///        }
        ///
        ///        public static T Dump&lt;T&gt;(this T value)
        ///        {
        ///            return Dump(value, 3);
        ///        }
        ///
        ///        public static T Dump&lt;T&gt;(this T value, int maximumDepth)
        ///        {
        ///            Dumper.Dump(value, maximumDepth);
        ///            
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DumpExtensions {
            get {
                return ResourceManager.GetString("DumpExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Reflection;
        ///using System.Text;
        ///using System.Web.UI;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public class HtmlObjectVisitor : DefaultObjectVisitor, IFileOutputObjectVisitor
        ///    {
        ///    	private const string Expand = &quot;down.png&quot;;
        ///    	private const string Collapse = &quot;up.png&quot;;
        ///    	private readonly HtmlTextWriter writer;
        ///    	private const string CyclicReferenceGliph = &quot;q&quot;;
        ///
        ///    	public [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HtmlObjectVisitor {
            get {
                return ResourceManager.GetString("HtmlObjectVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.IO;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public class HtmlObjectVisitorFactory : IFileOutputObjectVisitorFactory
        ///    {
        ///        public IFileOutputObjectVisitor Create(string outputFilePath, int maximumDepth)
        ///        {
        ///            return new HtmlObjectVisitor(new StreamWriter(outputFilePath), maximumDepth);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string HtmlObjectVisitorFactory {
            get {
                return ResourceManager.GetString("HtmlObjectVisitorFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public interface IFileOutputObjectVisitor : IObjectVisitor, IDisposable
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string IFileOutputObjectVisitor {
            get {
                return ResourceManager.GetString("IFileOutputObjectVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public interface IFileOutputObjectVisitorFactory
        ///    {
        ///        IFileOutputObjectVisitor Create(string outputFilePath, int maximumDepth);
        ///    }
        ///}.
        /// </summary>
        internal static string IFileOutputObjectVisitorFactory {
            get {
                return ResourceManager.GetString("IFileOutputObjectVisitorFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public interface IObjectDumper
        ///    {
        ///        void Dump(object value, int maximumDepth);
        ///    }
        ///}.
        /// </summary>
        internal static string IObjectDumper {
            get {
                return ResourceManager.GetString("IObjectDumper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public interface IObjectVisitor
        ///    {
        ///        void Visit(object value);
        ///    }
        ///}.
        /// </summary>
        internal static string IObjectVisitor {
            get {
                return ResourceManager.GetString("IObjectVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public interface IServiceMessages
        ///    {
        ///        void LogMessage&lt;T&gt;(T message);
        ///        void LogWarning&lt;T&gt;(T message);
        ///        void LogFailure&lt;T&gt;(T message);
        ///        void LogError&lt;T&gt;(T message);
        ///        void LogError&lt;T&gt;(T message, string errorDetails);
        ///        void Failure&lt;T&gt;(T value, string format);
        ///        void Failure&lt;T&gt;(T value);
        ///        void Success&lt;T&gt;(T value, string format);
        ///        void Success&lt;T&gt;(T value);
        ///        void Pub [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IServiceMessages {
            get {
                return ResourceManager.GetString("IServiceMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.IO;
        ///
        ///namespace CSharpCompiler.Runtime
        ///{
        ///	public class PathUtilities
        ///	{
        ///		internal static string MakeTempPath(string fileName)
        ///		{
        ///			return Path.Combine(Path.GetTempPath(), fileName);
        ///		}
        ///	}
        ///}.
        /// </summary>
        internal static string PathUtilities {
            get {
                return ResourceManager.GetString("PathUtilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///	internal class ProgressFinishMessage : TeamCityServiceMessageSimple
        ///	{
        ///		public ProgressFinishMessage(object value)
        ///			: base(&quot;progressFinish&quot;, value)
        ///		{
        ///		}
        ///	}
        ///}.
        /// </summary>
        internal static string ProgressFinishMessage {
            get {
                return ResourceManager.GetString("ProgressFinishMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal class ProgressMessage : TeamCityServiceMessageSimple
        ///    {
        ///        public ProgressMessage(object value) : base(&quot;progressMessage&quot;, value)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string ProgressMessage {
            get {
                return ResourceManager.GetString("ProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///	internal class ProgressStartMessage : TeamCityServiceMessageSimple
        ///	{
        ///		public ProgressStartMessage(object value)
        ///			: base(&quot;progressStart&quot;, value)
        ///		{
        ///		}
        ///	}
        ///}.
        /// </summary>
        internal static string ProgressStartMessage {
            get {
                return ResourceManager.GetString("ProgressStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using System.Text;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal class PublishArtifactsMessage : TeamCityServiceMessageSimple
        ///    {
        ///        public PublishArtifactsMessage(string artifact, params string[] targets) : base(&quot;publishArtifacts&quot;, Compute(artifact, targets))
        ///        {
        ///        }
        ///
        ///        private static object Compute(string artifact, params string[] targets)
        ///        {
        ///            var artifactSpecification = new StringBuilder(artifact);
        ///
        ///            if (t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PublishArtifactsMessage {
            get {
                return ResourceManager.GetString("PublishArtifactsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public class ServiceMessages : IServiceMessages
        ///    {
        ///        private TextWriter Output { get; set; }
        ///
        ///        public static readonly IServiceMessages Default;
        ///
        ///        static ServiceMessages()
        ///        {
        ///            Default = new ServiceMessages(Console.Out);
        ///        }
        ///
        ///        public ServiceMessages(TextWriter output)
        ///        {
        ///            Output = output;
        ///        }
        ///
        ///        public void LogMessage&lt;T&gt;(T mess [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServiceMessages {
            get {
                return ResourceManager.GetString("ServiceMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.IO;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public abstract class TeamCityServiceMessage
        ///    {
        ///        protected TeamCityServiceMessage(string name)
        ///        {
        ///            Name = name;
        ///        }
        ///
        ///        private string Name { get; set; }
        ///
        ///        public void Run(TextWriter outputWriter)
        ///        {
        ///            outputWriter.WriteLine(&quot;##teamcity[{0}{1}]&quot;, Name, FormattedAndEscapedValue);
        ///        }
        ///
        ///        protected abstract string FormattedAndEscapedValue { get; }
        ///
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TeamCityServiceMessage {
            get {
                return ResourceManager.GetString("TeamCityServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public static class TeamCityServiceMessagesExtensions
        ///    {
        ///        static TeamCityServiceMessagesExtensions()
        ///        {
        ///            serviceMessages = ServiceMessages.Default;
        ///        }
        ///
        ///        public static IServiceMessages serviceMessages { get; set; }
        ///
        ///        public static T LogMessage&lt;T&gt;(this T message)
        ///        {
        ///            serviceMessages.LogMessage(message);
        ///            return message;
        ///        }
        ///
        ///        public static [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TeamCityServiceMessagesExtensions {
            get {
                return ResourceManager.GetString("TeamCityServiceMessagesExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    internal abstract class TeamCityServiceMessageSimple : TeamCityServiceMessage
        ///    {
        ///        private readonly object value;
        ///
        ///        protected TeamCityServiceMessageSimple(string name, object value) : base(name)
        ///        {
        ///            this.value = value;
        ///        }
        ///
        ///        protected override string FormattedAndEscapedValue
        ///        {
        ///            get { return string.Format(&quot; &apos;{0}&apos;&quot;, Escape(value)); }
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string TeamCityServiceMessageSimple {
            get {
                return ResourceManager.GetString("TeamCityServiceMessageSimple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace CSharpCompiler.Runtime.Messages
        ///{
        ///    public abstract class TeamCityServiceMessageWithAttributes : TeamCityServiceMessage
        ///    {
        ///        protected TeamCityServiceMessageWithAttributes(string name) : base(name)
        ///        {
        ///        }
        ///
        ///        protected override string FormattedAndEscapedValue
        ///        {
        ///            get
        ///            {
        ///                return Properties.Aggregate(new StringBuilder(),
        ///                   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TeamCityServiceMessageWithAttributes {
            get {
                return ResourceManager.GetString("TeamCityServiceMessageWithAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace CSharpCompiler.Runtime.Dumping
        ///{
        ///    public class VisitableObject
        ///    {
        ///        private readonly object value;
        ///
        ///        public VisitableObject(object value)
        ///        {
        ///            this.value = value;
        ///        }
        ///
        ///        public void AcceptVisitor(IObjectVisitor visitor)
        ///        {
        ///            visitor.Visit(value);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string VisitableObject {
            get {
                return ResourceManager.GetString("VisitableObject", resourceCulture);
            }
        }
    }
}
